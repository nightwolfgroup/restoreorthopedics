# Generated by Django 3.1.2 on 2020-10-15 07:45

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.contrib.routable_page.models
import wagtail.core.blocks
import wagtail.core.fields
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0052_pagelogentry'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailimages', '0022_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, help_text='A slug URL to identify posts by this category', max_length=255, populate_from='name', unique=True, verbose_name='Slug URL')),
            ],
            options={
                'verbose_name': 'Blog Category',
                'verbose_name_plural': 'Blog Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('content', wagtail.core.fields.StreamField([('content_block', wagtail.core.blocks.RichTextBlock(label='Content Block')), ('cta', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(default='Schedule a Consultation Today!', max_length=200, required=True)), ('subtitle', wagtail.core.blocks.TextBlock(default="Don't let pain keep you from the activities you love. We would love to help return you to your healthy and active lifestyle!", required=True)), ('button_text', wagtail.core.blocks.CharBlock(default='Schedule Now', max_length=50, required=True)), ('button_link', wagtail.core.blocks.PageChooserBlock(required=True)), ('background_color', wagtail.core.blocks.ChoiceBlock(choices=[('secondary', 'Gray'), ('light', 'White')]))], label='Call to Action Block')), ('map', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(default='Restore Orthopedics & Sports Medicine, Dr. Ariana DeMers, DO', max_length=200, required=True)), ('address', wagtail.core.blocks.CharBlock(default='13949 Mono Way, Sonora, CA 95370', max_length=255, required=True)), ('phone_number', wagtail.core.blocks.CharBlock(default='(209) 533 5371', max_length=255, required=True)), ('email', wagtail.core.blocks.EmailBlock(default='admin@restoreorthobiologic.com', max_length=255, required=True)), ('map_link', wagtail.core.blocks.URLBlock(default='https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3145.0021611358766!2d-120.34119008383189!3d37.977078879722995!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8090c528b63b1ba3%3A0xb75939887ae2279d!2sRestore%20Orthopedics%20and%20Sports%20Medicine%3A%20Ariana%20DeMers%2C%20D.O.!5e0!3m2!1sen!2sus!4v1601053197881!5m2!1sen!2sus', max_length=2000, required=True))], label='Google Map Block'))])),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_post', to=settings.AUTH_USER_MODEL)),
                ('categories', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='blog_post', to='blog.BlogCategory')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wagtailimages.image', verbose_name='Cover Image')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
                ('tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='blog.BlogPageTag', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Blog Post',
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.AddField(
            model_name='blogpagetag',
            name='content_object',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_tags', to='blog.blogpost'),
        ),
        migrations.AddField(
            model_name='blogpagetag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_blogpagetag_items', to='taggit.tag'),
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'verbose_name': 'Blog Home Page',
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
    ]
