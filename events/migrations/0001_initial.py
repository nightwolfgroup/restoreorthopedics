# Generated by Django 3.1.2 on 2020-10-15 07:45

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0052_pagelogentry'),
        ('wagtailimages', '0022_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='Events',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'verbose_name': 'Events Home Page',
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='EventPost',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateField(help_text='Event Date')),
                ('time', models.TimeField(help_text='Event Time')),
                ('location', models.CharField(help_text='Event Location Title (ex: Continuum)', max_length=100)),
                ('location_address', models.CharField(blank=True, help_text='If virtual event, leave blank', max_length=255, verbose_name='Street Address')),
                ('location_city', models.CharField(blank=True, help_text='If virtual event, leave blank', max_length=255, verbose_name='City')),
                ('location_state', models.CharField(blank=True, help_text='If virtual event, leave blank', max_length=50, verbose_name='State')),
                ('hero', wagtail.core.fields.StreamField([('event_title', wagtail.core.blocks.StructBlock([('background_image', wagtail.images.blocks.ImageChooserBlock(help_text='Optional Event Title Background Image, if not provided, a gradient background will be present', required=False)), ('cover_image', wagtail.images.blocks.ImageChooserBlock(help_text='Optional Event Cover Image (Displays Below the Title)', required=False)), ('button_text', wagtail.core.blocks.CharBlock(default='Reserve Your Seat', help_text='Text displayed inside the button', max_length=50, required=True)), ('button_link', wagtail.core.blocks.URLBlock(help_text='Eventbrite Link', required=True))]))])),
                ('content', wagtail.core.fields.StreamField([('event_countdown', wagtail.core.blocks.StructBlock([('countdown_title', wagtail.core.blocks.CharBlock(default='Event will start in:', help_text='Text to display to the left of the countdown. The countdown will automatically update from the event date.', required=True))])), ('event_speakers', wagtail.core.blocks.StructBlock([('speaker', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock(help_text='Speaker Name', max_length=255, required=True)), ('about', wagtail.core.blocks.CharBlock(help_text="Optional text to display below the speaker's name", max_length=255, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(help_text='Speaker Image', required=True))], icon='fa-user'), label='Event Speaker'))])), ('call_to_action', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(help_text='Image displayed to the left of CTA content. Will be video icon if a video URL is provided.', required=True)), ('title', wagtail.core.blocks.CharBlock(default='Why you should join the event?', help_text='Event CTA Title', max_length=255, required=True)), ('video_url', wagtail.core.blocks.URLBlock(help_text='Optional Video URL, will create a play button over the title image. Video will play in a pop-up window.', required=False)), ('list_items', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('icon', wagtail.images.blocks.ImageChooserBlock(help_text='Optional icon to display next to the list item', required=False)), ('title', wagtail.core.blocks.CharBlock(help_text='Title for list item displayed below the main title', max_length=255, required=True)), ('subtitle', wagtail.core.blocks.CharBlock(help_text='Optional text displayed below the list item title', max_length=1000, required=False))], icon='fa-list-ul'), label='CTA Item List'))])), ('stats', wagtail.core.blocks.StructBlock([('statistics', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('number', wagtail.core.blocks.IntegerBlock(help_text='Number displayed above the statistic', required=True)), ('statistic', wagtail.core.blocks.CharBlock(help_text='Statistic name that is displayed below the number', required=True))], icon='fa-hashtag'), label='Event Statistic'))])), ('schedule', wagtail.core.blocks.StructBlock([('schedule_blocks', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('start_time', wagtail.core.blocks.TimeBlock(help_text='Schedule block start time', required=True)), ('end_time', wagtail.core.blocks.TimeBlock(help_text='Schedule block end time', required=True)), ('events', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(help_text='Title of what is happening in this schedule block', max_length=500, required=True)), ('subtitle', wagtail.core.blocks.CharBlock(help_text='Small text displayed above the schedule block title', max_length=1000, required=False)), ('speaker_name', wagtail.core.blocks.CharBlock(help_text='If this schedule block features a speaker, you may append their name here', required=False)), ('speaker_image', wagtail.images.blocks.ImageChooserBlock(help_text='If adding a speaker name, you may add the speaker image here.', required=False))], icon='fa-clock-o'), help_text='You may add multiple events for each scheduling block', label='Event'))], icon='fa-clock-o'), label='Event Schedule Block'))])), ('location', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(default='Location', max_length=50, required=True)), ('subtitle', wagtail.core.blocks.CharBlock(help_text='Optional subtext displayed below the section title, may be useful to provide directions to the event location', max_length=2000, required=False)), ('amenities', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('amenity', wagtail.core.blocks.CharBlock(max_length=50, required=False))], icon='fa-star'), label='Location Amenities')), ('map_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('map_link', wagtail.core.blocks.CharBlock(default='https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3145.0021611358766!2d-120.34119008383189!3d37.977078879722995!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8090c528b63b1ba3%3A0xb75939887ae2279d!2sRestore%20Orthopedics%20and%20Sports%20Medicine%3A%20Ariana%20DeMers%2C%20D.O.!5e0!3m2!1sen!2sus!4v1601053197881!5m2!1sen!2sus', help_text='Google Map Embed Link', max_length=5000, required=False)), ('location_images', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock(max_length=100, required=True))], icon='fa-building'), label='Location Images', max_count=4))])), ('tickets', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(default='Reserve Your Seat', max_length=100, required=True)), ('ticket_types', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock(default='General Admission', help_text='Name of the type of ticket offered', max_length=255, required=True)), ('description', wagtail.core.blocks.CharBlock(help_text='Optional text to further describe the ticket', max_length=255, required=False)), ('button_text', wagtail.core.blocks.CharBlock(default='Reserve Your Seat', help_text='Text that will display inside the button', max_length=50, required=True)), ('button_link', wagtail.core.blocks.URLBlock(help_text='Link the button will navigate to when clicked, this should be the Eventbrite page', required=True))], icon='fa-ticket'), label='Ticket Types'))]))])),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
            ],
            options={
                'verbose_name': 'Event',
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
    ]
